"use strict";(self.webpackChunkmu_website=self.webpackChunkmu_website||[]).push([[7185],{5051:(i,n,e)=>{e.r(n),e.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>_,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var r=e(74848),s=e(28453);const t={},o="\u811a\u672c\u529f\u80fd\u7f16\u5199\u2014\u2014bilibili\u673a\u5668\u4eba\u4e3a\u4f8b",d={id:"Blog/QQBot/\u811a\u672c\u529f\u80fd\u7f16\u5199",title:"\u811a\u672c\u529f\u80fd\u7f16\u5199\u2014\u2014bilibili\u673a\u5668\u4eba\u4e3a\u4f8b",description:"2024-6-11 \\~ 2024-6-13",source:"@site/docs/Blog/05-QQBot/02-\u811a\u672c\u529f\u80fd\u7f16\u5199.md",sourceDirName:"Blog/05-QQBot",slug:"/Blog/QQBot/\u811a\u672c\u529f\u80fd\u7f16\u5199",permalink:"/docs/Blog/QQBot/\u811a\u672c\u529f\u80fd\u7f16\u5199",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Blog/05-QQBot/02-\u811a\u672c\u529f\u80fd\u7f16\u5199.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"Blog",previous:{title:"\u4f7f\u7528NapCatQQ\u642d\u5efaQQ\u673a\u5668\u4eba",permalink:"/docs/Blog/QQBot/\u4f7f\u7528NapCatQQ\u642d\u5efaQQBot"},next:{title:"github\u76d1\u63a7",permalink:"/docs/Blog/QQBot/github\u76d1\u63a7"}},a={},l=[{value:"\u529f\u80fd\u8bbe\u8ba1",id:"\u529f\u80fd\u8bbe\u8ba1",level:2},{value:"init_db.py",id:"init_dbpy",level:2},{value:"main.py",id:"mainpy",level:2},{value:"bilibili.py",id:"bilibilipy",level:2},{value:"update.py",id:"updatepy",level:2},{value:"help.txt",id:"helptxt",level:2}];function c(i){const n={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...i.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"\u811a\u672c\u529f\u80fd\u7f16\u5199bilibili\u673a\u5668\u4eba\u4e3a\u4f8b",children:"\u811a\u672c\u529f\u80fd\u7f16\u5199\u2014\u2014bilibili\u673a\u5668\u4eba\u4e3a\u4f8b"}),"\n",(0,r.jsx)(n.p,{children:"2024-6-11 ~ 2024-6-13"}),"\n",(0,r.jsx)(n.p,{children:"\u57fa\u7840\u811a\u672c\uff0c\u540e\u7eed\u7684\u4fee\u6539\u548c\u66f4\u65b0\u4e0d\u5199"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"\u529f\u80fd\u8bbe\u8ba1",children:"\u529f\u80fd\u8bbe\u8ba1"}),"\n",(0,r.jsx)(n.p,{children:"\u9996\u5148\u6211\u4eec\u5148\u4e86\u89e3\u6574\u4e2abilibili\u76d1\u63a7\u7684\u6846\u67b6\uff0c\u4e2a\u4eba\u7684\u60f3\u6cd5\u662f\u8fd9\u6837\u7684"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"|--main.py\r\n|---scripts/\r\n|  |bilibili/\r\n|     |bilibili.py\r\n|     |update.py\r\n|     |bilibili.db\n"})}),"\n",(0,r.jsx)(n.p,{children:'\u5176\u4e2dbilibili.py\u4e2d\u5b58\u653e\u7684\u662f\u83b7\u53d6b\u7ad9\u66f4\u65b0\u5185\u5bb9\uff0c\u4ee5\u53ca\u6267\u884c\u7528\u6237\u7684\u6307\u4ee4\u6765\u6dfb\u52a0\u4e0e\u5220\u9664\u3002json\u6587\u4ef6\u5b58\u50a8\u7528\u6237\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u4fdd\u5b58\u7684\u662f\u7528\u6237\u7684QQ\u53f7\u3001\u7528\u6237\u5728\u54ea\u4e2a\u7fa4\u4e2d\u6dfb\u52a0\u7684\uff0cUID\u3002\u5373"QQID","GroupID","bilibiliUID"'}),"\n",(0,r.jsx)(n.p,{children:"\u9996\u5148\u5b89\u88c5bilibili-api\u5e93\u4e0e\u5176\u4ed6\u4f9d\u8d56(\u63a5\u53e3\u53ef\u80fd\u6539\u52a8\uff0c\u8bf7\u53ca\u65f6\u66f4\u65b0\u6700\u65b0\u7248)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install bilibili-api-python asyncio importlib\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u63a5\u7740\u662f\u60f3\u8981\u5b9e\u73b0\u7684\u529f\u80fd\uff0c\u76ee\u524d\u662f\u60f3\u4e86\u4e94\u4e2a\u529f\u80fd"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"\u4e0d\u540c\u7fa4\u804a\u4e2d\u5bf9\u67d0UID\u8d26\u53f7\u7684\u76d1\u63a7\r\n/bili add [uid] \u6dfb\u52a0\u6307\u5b9aUID\u8fdb\u884c\u76d1\u63a7\r\n/bili del [uid] \u5220\u9664UID\u76d1\u63a7\r\n/bili info \u67e5\u8be2\u4e2a\u4eba\u5728\u5f53\u524d\u7fa4\u91cc\u6240\u6dfb\u52a0\u7684\u76d1\u63a7\r\n/bili at [on/off] \u5f00\u542f/\u5173\u95ed\u66f4\u65b0\u827e\u7279\u6dfb\u52a0\u4eba\uff0c\u6dfb\u52a0\u65b0\u5173\u6ce8\u540e\u9700\u8981\u518d\u6b21\u5f00\u542f\r\n/bili user [uid] \u67e5\u8be2\u6307\u5b9aUID\n"})}),"\n",(0,r.jsx)(n.h2,{id:"init_dbpy",children:"init_db.py"}),"\n",(0,r.jsx)(n.p,{children:"\u65e2\u7136\u8981\u4f7f\u7528\u4e0d\u540c\u7fa4\u804a\uff0c\u90a3\u4e48\u5c31\u8981\u6d89\u53ca\u5230\u5b58\u50a8\uff0c\u8fd9\u91cc\u4f7f\u7528sqlite3\u672c\u5730\u6765\u5b58\u50a8,init_db.py\u5982\u4e0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import sqlite3\r\nimport os\r\n\r\nDATABASE_PATH = os.path.join(os.path.dirname(__file__), 'bilibili.db')\r\n\r\ndef initialize_db():\r\n    conn = sqlite3.connect(DATABASE_PATH)\r\n    cursor = conn.cursor()\r\n    cursor.execute('''\r\n    CREATE TABLE IF NOT EXISTS monitoring (\r\n        group_id TEXT,\r\n        qq_id TEXT,\r\n        bilibili_uid TEXT,\r\n        at BOOLEAN,\r\n        last_checked INTEGER,\r\n        PRIMARY KEY (group_id, qq_id, bilibili_uid)\r\n    )\r\n    ''')\r\n    conn.commit()\r\n    conn.close()\r\n\r\nif __name__ == '__main__':\r\n    initialize_db()\r\n    print(\"Database initialized.\")\n"})}),"\n",(0,r.jsx)(n.h2,{id:"mainpy",children:"main.py"}),"\n",(0,r.jsx)(n.p,{children:"\u63a5\u7740\u5462\u8981\u7f16\u5199main.py\uff0c\u6839\u636e\u9700\u6c42\u8981\u5b9e\u73b0\u4ee5\u4e0b\u64cd\u4f5c\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u53d1\u9001\u6d88\u606f"}),"\n",(0,r.jsx)(n.li,{children:"\u63a5\u6536\u7fa4\u6d88\u606f\u4e8b\u4ef6"}),"\n",(0,r.jsx)(n.li,{children:"\u6267\u884cbilibili.py"}),"\n",(0,r.jsx)(n.li,{children:"\u6267\u884cupdate.py"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u5176\u4e2d\uff0c\u53d1\u9001\u6d88\u606f\u548c\u63a5\u6536\u7fa4\u6d88\u606f\u4e8b\u4ef6\u5728\u4e4b\u524d\u5c31\u5df2\u7ecf\u5b9e\u73b0\u4e86\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7167\u642c"}),"\n",(0,r.jsx)(n.p,{children:"\u5bf9\u4e8ebilibili.py\uff0c\u67e5\u8be2bilibili-api\u5e93\u540e\u53d1\u73b0\u9700\u8981\u5f02\u6b65\u64cd\u4f5c"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"asyncio.run(handle_bili_command(message, user_id, group_id, send_group_message))"})}),"\n",(0,r.jsx)(n.p,{children:"\u63a5\u7740\u662f\u6700\u9ebb\u70e6\u7684update.py\uff0c\u9700\u8981\u957f\u671f\u5237\u65b0\u5e76\u68c0\u6d4b\u66f4\u65b0\uff0c\u603b\u4e4b\u6700\u540e\u5f97\u5230\u7684main.py\u811a\u672c\u5982\u4e0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from flask import Flask, request\r\nimport requests\r\nimport asyncio\r\nimport logging\r\nimport time\r\nimport os\r\nfrom concurrent.futures import ThreadPoolExecutor\r\nimport signal\r\nimport sys\r\nfrom scripts.bilibili.bilibili import handle_bili_command\r\nfrom scripts.bilibili.update import main as update_main\r\n\r\napp = Flask(__name__)\r\n\r\n# NapCatQQ API\u7684\u57fa\u7840URL\r\nbase_url = \"\"\r\naccess_token = \"\"\r\n\r\n# \u914d\u7f6e\u65e5\u5fd7\u8bb0\u5f55\r\nlog_path = os.path.join(os.path.dirname(__file__), 'log.txt')\r\nlogging.basicConfig(filename=log_path, level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\r\n\r\ndef send_group_message(group_id, message):\r\n    url = f\"{base_url}/send_group_msg\"\r\n    params = {\r\n        \"group_id\": group_id,\r\n        \"message\": message,\r\n        \"access_token\": access_token\r\n    }\r\n    requests.get(url, params=params)\r\n\r\n@app.route('/', methods=['POST'])\r\ndef receive_event():\r\n    data = request.json\r\n    logging.info(f\"Received event: {data}\")\r\n    bili_data = ''\r\n    # \u68c0\u67e5\u662f\u5426\u662f\u7fa4\u6d88\u606f\u4e8b\u4ef6\r\n    if data['post_type'] == 'message' and data['message_type'] == 'group':\r\n        group_id = str(data['group_id'])\r\n        message_objects = data['message']\r\n        message = ''.join([m['data']['text'] for m in message_objects if m['type'] == 'text'])\r\n        user_id = str(data['user_id'])\r\n\r\n        logging.info(f\"Processed message: {message}\")\r\n        if message == '/help' or message == 'help' or message == '\u5e2e\u52a9':\r\n            send_group_message(group_id, open('help.txt', 'r').read())\r\n        elif message.startswith('/bili'):\r\n            asyncio.run(handle_bili_command(message, user_id, group_id, send_group_message))\r\n        elif(message == 'test1'):\r\n            send_group_message(group_id,f'[CQ:json,data={bili_data}]')\r\n    return \"OK\", 200\r\n\r\ndef run_flask():\r\n    app.run(host='0.0.0.0', port=7777)\r\n\r\nasync def run_asyncio(send_group_message):\r\n    loop = asyncio.get_event_loop()\r\n\r\n    for signame in {'SIGINT', 'SIGTERM'}:\r\n        loop.add_signal_handler(getattr(signal, signame), lambda: asyncio.ensure_future(shutdown(loop)))\r\n\r\n    await update_main(send_group_message)\r\n\r\nasync def shutdown(loop):\r\n    logging.info(\"Shutdown initiated.\")\r\n    tasks = [t for t in asyncio.all_tasks() if t is not asyncio.current_task()]\r\n    for task in tasks:\r\n        task.cancel()\r\n    await asyncio.gather(*tasks, return_exceptions=True)\r\n    loop.stop()\r\n\r\nif __name__ == '__main__':\r\n    print('main:', time.time())\r\n    with ThreadPoolExecutor() as executor:\r\n        executor.submit(run_flask)\r\n\r\n        try:\r\n            asyncio.run(run_asyncio(send_group_message))\r\n        except KeyboardInterrupt:\r\n            pass\r\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"bilibilipy",children:"bilibili.py"}),"\n",(0,r.jsxs)(n.p,{children:["\u7136\u540e\u5462\u662f\u5bf9bilibili.py\u7684\u7f16\u5199\uff0c\u4e3b\u8981\u5206\u4e3a",(0,r.jsx)(n.code,{children:"\u83b7\u53d6\u89c6\u9891\u4fe1\u606f"}),"\u3001",(0,r.jsx)(n.code,{children:"\u6dfb\u52a0\u7528\u6237"}),"\u3001",(0,r.jsx)(n.code,{children:"\u5220\u9664\u7528\u6237"}),"\u3001",(0,r.jsx)(n.code,{children:"\u67e5\u8be2\u7528\u6237"}),"\u3001",(0,r.jsx)(n.code,{children:"\u5f00\u5173at"}),"\u3001",(0,r.jsx)(n.code,{children:"\u5904\u7406\u4f20\u5165\u7684\u547d\u4ee4"})]}),"\n",(0,r.jsxs)(n.p,{children:["\u7136\u540e\u5751\u70b9\u5728\u4e8e",(0,r.jsx)(n.code,{children:"-352"}),"\u62a5\u9519\uff1a",(0,r.jsx)(n.code,{children:"\u63a5\u53e3\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff1a-352\uff0c\u4fe1\u606f\uff1a\u98ce\u63a7\u6821\u9a8c\u5931\u8d25\u3002"})]}),"\n",(0,r.jsxs)(n.p,{children:["\u8fd9\u91cc\u662f\u7531\u4e8eB\u7ad9\u7684\u68c0\u6d4b\uff0c\u9700\u8981\u8bbe\u5907\u9a8c\u8bc1\u7801\u5426\u5219\u4f1a\u98ce\u63a7",(0,r.jsx)(n.a,{href:"https://github.com/Nemo2011/bilibili-api/issues/691",children:"https://github.com/Nemo2011/bilibili-api/issues/691"})]}),"\n",(0,r.jsxs)(n.p,{children:["\u7136\u540e\u5728\u8be5\u5e93\u63cf\u8ff0\u4e2d\u5199\u4e86\u5982\u4f55\u83b7\u53d6\u6240\u9700\u4fe1\u606f",(0,r.jsx)(n.a,{href:"https://nemo2011.github.io/bilibili-api/#/get-credential",children:"https://nemo2011.github.io/bilibili-api/#/get-credential"})]}),"\n",(0,r.jsx)(n.p,{children:"\u4f7f\u7528\u65b9\u6cd5\u4e3a\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u5b9e\u4f8b\u5316 Credential \u7c7b\r\ncredential = Credential(sessdata=SESSDATA, bili_jct=BILI_JCT, buvid3=BUVID3)\r\n# \u5b9e\u4f8b\u5316 Video \u7c7b\r\nv = video.Video(bvid="BVxxxxxxxx", credential=credential)\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u540c\u65f6\u5728\u8fde\u63a5\u5230bilibili.db\u65f6\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u5426\u5219\u4f1a\u5728/app\u4e0b\u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u4e3aupdate\u548cbilibili\u4e0emain.py\u4e0d\u5728\u540c\u4e00\u76ee\u5f55\u4e0b"}),"\n",(0,r.jsx)(n.p,{children:"\u56e0\u6b64\u53ef\u4ee5\u5199\u51fabilibili.py\u811a\u672c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import sqlite3\r\nimport os\r\nimport asyncio\r\nimport datetime\r\nfrom bilibili_api import user, Credential\r\n\r\nDATABASE_PATH = os.path.join(os.path.dirname(__file__), 'bilibili.db')\r\n\r\n# \u8fde\u63a5\u5230\u6570\u636e\u5e93\r\ndef connect_db():\r\n    return sqlite3.connect(DATABASE_PATH)\r\n\r\n# \u83b7\u53d6\u7528\u6237\u89c6\u9891\u4fe1\u606f\r\nasync def get_latest_video(uid):\r\n    credential = Credential(\r\n        sessdata=\"\",\r\n        bili_jct=\"\", buvid3=\"\",\r\n        dedeuserid=\"\"\r\n    )\r\n    u = user.User(uid, credential=credential)\r\n    videos = await u.get_videos()\r\n    return videos if videos else None\r\n\r\n# \u6dfb\u52a0\u7528\u6237\r\nasync def add_user(qq_id, group_id, bilibili_uid):\r\n    conn = connect_db()\r\n    cursor = conn.cursor()\r\n\r\n    videos = await get_latest_video(bilibili_uid)\r\n    last_checked = videos['list']['vlist'][0]['created'] if videos else None\r\n\r\n    cursor.execute('''\r\n    INSERT OR IGNORE INTO monitoring (group_id, qq_id, bilibili_uid, at, last_checked)\r\n    VALUES (?, ?, ?, ?, ?)\r\n    ''', (group_id, qq_id, bilibili_uid, False, last_checked))\r\n\r\n    conn.commit()\r\n    conn.close()\r\n    return True\r\n\r\n# \u5220\u9664\u7528\u6237\r\ndef remove_user(qq_id, group_id, bilibili_uid):\r\n    conn = connect_db()\r\n    cursor = conn.cursor()\r\n\r\n    cursor.execute('''\r\n    DELETE FROM monitoring\r\n    WHERE group_id = ? AND qq_id = ? AND bilibili_uid = ?\r\n    ''', (group_id, qq_id, bilibili_uid))\r\n\r\n    conn.commit()\r\n    conn.close()\r\n    return True\r\n\r\n# \u67e5\u8be2\u7528\u6237\u6dfb\u52a0\u7684\u76d1\u63a7\r\ndef get_user_info(qq_id, group_id):\r\n    conn = connect_db()\r\n    cursor = conn.cursor()\r\n\r\n    cursor.execute('''\r\n    SELECT bilibili_uid, at FROM monitoring\r\n    WHERE group_id = ? AND qq_id = ?\r\n    ''', (group_id, qq_id))\r\n\r\n    rows = cursor.fetchall()\r\n    conn.close()\r\n\r\n    if rows:\r\n        uids = [row[0] for row in rows]\r\n        at_status = \"\u5f00\u542f\" if rows[0][1] else \"\u5173\u95ed\"\r\n        return f\"\u4f60\u5728\u672c\u7fa4\u4e2d\u6dfb\u52a0\u7684\u76d1\u63a7UID\u4e3a: {', '.join(uids)}\\n\u827e\u7279\u529f\u80fd: {at_status}\"\r\n    return \"\u4f60\u5728\u672c\u7fa4\u4e2d\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u76d1\u63a7\"\r\n\r\n# \u8bbe\u7f6e\u827e\u7279\u529f\u80fd\r\ndef set_at_function(qq_id, group_id, on_off):\r\n    conn = connect_db()\r\n    cursor = conn.cursor()\r\n\r\n    cursor.execute('''\r\n    UPDATE monitoring\r\n    SET at = ?\r\n    WHERE group_id = ? AND qq_id = ?\r\n    ''', (on_off.lower() == \"on\", group_id, qq_id))\r\n\r\n    conn.commit()\r\n    conn.close()\r\n    return True\r\n\r\n# \u5904\u7406Bili\u547d\u4ee4\r\nasync def handle_bili_command(command, qq_id, group_id, send_group_message):\r\n    parts = command.split()\r\n    if len(parts) < 2:\r\n        send_group_message(group_id, \"\u547d\u4ee4\u683c\u5f0f\u9519\u8bef,\u4f7f\u7528/help\u67e5\u770b\u4f7f\u7528\u5e2e\u52a9\")\r\n        return\r\n\r\n    action = parts[1]\r\n\r\n    if action == \"add\" and len(parts) == 3:\r\n        bilibili_uid = parts[2]\r\n        if await add_user(qq_id, group_id, bilibili_uid):\r\n            send_group_message(group_id, f\"\u5df2\u6dfb\u52a0B\u7ad9UID: {bilibili_uid}\")\r\n        else:\r\n            send_group_message(group_id, \"\u4f60\u5df2\u7ecf\u6dfb\u52a0\u8fc7\u8be5\u7528\u6237\u4e86\u54e6\")\r\n    elif action == \"del\" and len(parts) == 3:\r\n        bilibili_uid = parts[2]\r\n        if remove_user(qq_id, group_id, bilibili_uid):\r\n            send_group_message(group_id, f\"\u5df2\u5220\u9664B\u7ad9UID: {bilibili_uid}\")\r\n        else:\r\n            send_group_message(group_id, \"\u5220\u9664\u5931\u8d25\uff0c\u4f60\u6ca1\u6709\u6dfb\u52a0\u8fc7\u8be5\u7528\u6237\")\r\n    elif action == \"at\" and len(parts) == 3:\r\n        on_off = parts[2]\r\n        if set_at_function(qq_id, group_id, on_off):\r\n            send_group_message(group_id, f\"\u827e\u7279\u529f\u80fd\u5df2{'\u5f00\u542f' if on_off.lower() == 'on' else '\u5173\u95ed'}\")\r\n        else:\r\n            send_group_message(group_id, \"\u8bbe\u7f6e\u827e\u7279\u529f\u80fd\u5931\u8d25\uff0c\u8bf7\u5148\u6dfb\u52a0\u7528\u6237\")\r\n    elif action == \"info\" and len(parts) == 2:\r\n        user_info = get_user_info(qq_id, group_id)\r\n        send_group_message(group_id, user_info)\r\n    elif action == \"user\" and len(parts) == 3:\r\n        bilibili_uid = parts[2]\r\n        videos = await get_latest_video(bilibili_uid)\r\n        if videos:\r\n            latest_video = videos['list']['vlist'][0]\r\n            created_datetime = datetime.datetime.fromtimestamp(latest_video['created']+28800).strftime('%Y-%m-%d %H:%M:%S')\r\n            video_pic = latest_video['pic']\r\n            send_group_message(group_id,\r\n                               f\"\u7528\u6237\uff1a{latest_video['author']}\\n\u6700\u65b0\u89c6\u9891: {latest_video['title']}\\n\u94fe\u63a5: https://www.bilibili.com/video/{latest_video['bvid']}\\n\u66f4\u65b0\u65f6\u95f4\uff1a{created_datetime}\\n[CQ:image,file={video_pic}]\")\r\n        else:\r\n            send_group_message(group_id, f\"\u65e0\u6cd5\u83b7\u53d6\u7528\u6237 {bilibili_uid} \u4fe1\u606f\")\r\n    else:\r\n        send_group_message(group_id, \"\u547d\u4ee4\u683c\u5f0f\u9519\u8bef\")\r\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"updatepy",children:"update.py"}),"\n",(0,r.jsx)(n.p,{children:"update\u5c31\u662f\u68c0\u6d4b\u66f4\u65b0\uff0c\u5904\u7406\u4e0e\u4e0a\u9762\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u7531\u4e8e\u9700\u8981\u4e00\u76f4\u5237\u65b0\uff0c\u8fd9\u91cc\u4e0emain.py\u6709\u4e00\u5b9a\u7684\uff0cemmm\uff0c\u5c0f\u51b2\u7a81\uff0c\u603b\u4e4b\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u811a\u672c\u5982\u4e0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import asyncio\r\nimport sqlite3\r\nimport os\r\nimport datetime\r\nimport logging\r\nimport time\r\nfrom bilibili_api import user, Credential\r\n\r\nDATABASE_PATH = os.path.join(os.path.dirname(__file__), 'bilibili.db')\r\n\r\nlog_path = os.path.join(os.path.dirname(__file__), 'log.txt')\r\nlogging.basicConfig(filename=log_path, level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')  \r\n\r\ndef connect_db():\r\n    return sqlite3.connect(DATABASE_PATH)\r\n\r\nasync def get_latest_video(uid):\r\n    credential = Credential(\r\n        sessdata=\"\",\r\n        bili_jct=\"\", buvid3=\"\",\r\n        dedeuserid=\"\"\r\n    )\r\n    u = user.User(uid, credential=credential)\r\n    videos = await u.get_videos()\r\n    return videos if videos else None\r\n\r\n# \u5b9a\u671f\u68c0\u67e5\u66f4\u65b0\r\nasync def check_updates(send_group_message):\r\n    try:\r\n        conn = connect_db()\r\n        cursor = conn.cursor()\r\n\r\n        cursor.execute('SELECT DISTINCT group_id, qq_id, bilibili_uid FROM monitoring')\r\n        rows = cursor.fetchall()\r\n\r\n        for group_id, qq_id, uid in rows:\r\n            videos = await get_latest_video(uid)\r\n            if videos:\r\n                latest_video = videos['list']['vlist'][0]\r\n                latest_timestamp = latest_video['created']\r\n                cursor.execute('SELECT last_checked FROM monitoring WHERE group_id = ? AND qq_id = ? AND bilibili_uid = ?', (group_id, qq_id, uid))\r\n                last_checked = cursor.fetchone()\r\n\r\n                if last_checked is None or last_checked[0] is None or latest_timestamp > last_checked[0]:\r\n                    at_status = cursor.execute('SELECT at FROM monitoring WHERE group_id = ? AND qq_id = ? AND bilibili_uid = ?', (group_id, qq_id, uid)).fetchone()[0]\r\n                    at_text = f\"[CQ:at,qq={qq_id}]\" if at_status else \"\"\r\n                    created_datetime = datetime.datetime.fromtimestamp(latest_timestamp+28800).strftime('%Y-%m-%d %H:%M:%S')\r\n                    video_pic = latest_video['pic']\r\n                    message = f\"{at_text} \u7528\u6237 {latest_video['author']}\\n\u6709\u4e00\u4e2a\u65b0\u89c6\u9891: {latest_video['title']}\\n\u94fe\u63a5: https://www.bilibili.com/video/{latest_video['bvid']}\\n\u66f4\u65b0\u65f6\u95f4\uff1a{created_datetime}\\n[CQ:image,file={video_pic}]\"\r\n                    send_group_message(group_id, message)\r\n\r\n                    cursor.execute('UPDATE monitoring SET last_checked = ? WHERE group_id = ? AND qq_id = ? AND bilibili_uid = ?', (latest_timestamp, group_id, qq_id, uid))\r\n\r\n        conn.commit()\r\n        conn.close()\r\n    except :\r\n        logging.info('wrong-update:', time.time())\r\n\r\nasync def main(send_group_message):\r\n    while True:\r\n        await check_updates(send_group_message)\r\n        await asyncio.sleep(45)  # 45\u79d2\u68c0\u6d4b\u4e00\u6b21\r\n\r\nif __name__ == \"__main__\":\r\n    from scripts.bilibili.bilibili import send_group_message \r\n    asyncio.run(main(send_group_message))\n"})}),"\n",(0,r.jsx)(n.h2,{id:"helptxt",children:"help.txt"}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u4e2a\u5c31\u662f\u81ea\u5df1\u5199\u5e2e\u52a9\u624b\u518c\u5566\uff0c\u4f8b\u5982\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"\u4e0d\u540c\u7fa4\u804a\u4e2d\u5bf9\u67d0UID\u8d26\u53f7\u7684\u76d1\u63a7\r\n/bili add [uid] \u6dfb\u52a0\u6307\u5b9aUID\u8fdb\u884c\u76d1\u63a7\r\n/bili del [uid] \u5220\u9664UID\u76d1\u63a7\r\n/bili info \u67e5\u8be2\u4e2a\u4eba\u5728\u5f53\u524d\u7fa4\u91cc\u6240\u6dfb\u52a0\u7684\u76d1\u63a7\r\n/bili at [on/off] \u5f00\u542f/\u5173\u95ed\u66f4\u65b0\u827e\u7279\u6dfb\u52a0\u4eba\uff0c\u6dfb\u52a0\u65b0\u5173\u6ce8\u540e\u9700\u8981\u518d\u6b21\u5f00\u542f\r\n/bili user [uid] \u67e5\u8be2\u6307\u5b9aUID\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u7136\u540e\u8fd0\u884cpython main.py\u5373\u53ef\uff0c\u6700\u7ec8app\u7684\u7ed3\u6784\u5982\u4e0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:".\r\n\u251c\u2500\u2500 help.txt\r\n\u251c\u2500\u2500 main.py\r\n\u2514\u2500\u2500 scripts\r\n    \u2514\u2500\u2500 bilibili\r\n        \u251c\u2500\u2500 __pycache__\r\n        \u2502\xa0\xa0 \u251c\u2500\u2500 bilibili.cpython-310.pyc\r\n        \u2502\xa0\xa0 \u2514\u2500\u2500 update.cpython-310.pyc\r\n        \u251c\u2500\u2500 bilibili.db\r\n        \u251c\u2500\u2500 bilibili.py\r\n        \u251c\u2500\u2500 initialize_db.py\r\n        \u251c\u2500\u2500 log.txt\r\n        \u2514\u2500\u2500 update.py\n"})})]})}function _(i={}){const{wrapper:n}={...(0,s.R)(),...i.components};return n?(0,r.jsx)(n,{...i,children:(0,r.jsx)(c,{...i})}):c(i)}},28453:(i,n,e)=>{e.d(n,{R:()=>o,x:()=>d});var r=e(96540);const s={},t=r.createContext(s);function o(i){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof i?i(n):{...n,...i}}),[n,i])}function d(i){let n;return n=i.disableParentContext?"function"==typeof i.components?i.components(s):i.components||s:o(i.components),r.createElement(t.Provider,{value:n},i.children)}}}]);